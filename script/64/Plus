#!/bin/bash
clear
apt-get install lolcat -y &>/dev/null
apt-get install figlet -y &>/dev/null
apt-get install curl -y &>/dev/null
apt install git -y &>/dev/null 
apt install figlet boxes -y &>/dev/null

cd $HOME

# Verifica se o script está sendo executado como root
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mVocê precisa executar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 0
}

# Prepara links codificados
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')

# Função para mostrar uma barra de progresso
fun_bar () {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y > /dev/null 2>&1
        ${comando[1]} -y > /dev/null 2>&1
        touch $HOME/fim
    ) > /dev/null 2>&1 &
    tput civis
    echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
    while true; do
        for((i=0; i<18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;37m]"
        tput cuu1
        tput dl1
        echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
    done
    echo -e "\033[1;37m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

# Função para verificar a chave
function verif_key () {
    krm=$(echo '5:q-3gs2.o7%8:1'|rev)
    chmod +x $_Ink/list > /dev/null 2>&1
    [[ ! -e "$_Ink/list" ]] && {
        echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
        rm -rf $HOME/Plus > /dev/null 2>&1
        tput reset
        exit 1
    }
}

# Exibir informações do script
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[41;1;37m             ⇱ SCRIPT SSHPLUS PRO ⇲              \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""
echo -e "             \033[1;31mATENÇÃO! \033[1;37mESSE SCRIPT IRÁ! \033[0m"
echo ""
echo -e "\033[1;31m• \033[1;37mINSTALAR UM CONJUNTO DE SCRIPTS COMO FERRAMENTAS \033[0m"
echo -e "\033[1;37m  PARA O GERENCIAMENTO DE REDE, SISTEMA E USUÁRIOS \033[0m"
echo ""
echo -e "\033[1;32m• \033[1;32mDICA! \033[1;37mUTILIZE O TEMA DARK EM SEU TERMINAL PARA \033[0m"
echo -e "\033[1;37m  UMA MELHOR EXPERIÊNCIA E VISUALIZAÇÃO DO MESMO! \033[0m"
echo ""
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\033[1;37m               by:@TURBONET2023                  \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""

# Verificar a chave
echo -e "\n\033[1;36mVERIFICANDO LINK... \033[0m"
rm $_Ink/list > /dev/null 2>&1
wget -P $_Ink https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/list >/dev/null 2>&1
verif_key
sleep 3s

# Baixar recursos adicionais
echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
rm versao* >/dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/versao >/dev/null 2>&1
rm v2raymanager >/dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/v2raymanager >/dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/botteste.sh >/dev/null 2>&1
chmod 777 v2raymanager >/dev/null 2>&1
chmod 777 botteste.sh >/dev/null 2>&1
mkdir $HOME/BOT >/dev/null 2>&1
cd $HOME/BOT
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/ShellBot.sh >/dev/null 2>&1
chmod 777 ShellBot.sh >/dev/null 2>&1
cd >/dev/null 2>&1

# Verifica a existência do banco de dados de usuários
[[ -f "$HOME/usuarios.db" ]] && {
    tput reset
    echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
    echo -e "\033[0;34m┃                   \033[1;37m• \033[1;31mATENÇÃO \033[1;37m•                   \033[0;34m┃"
    echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
    echo -e "\033[0;34m┃\033[1;37mUMA BASE DE DADOS DE USUÁRIO \033[1;32m(usuarios.db) \033[1;37mFOI        \033[0;34m┃"
    echo -e "\033[0;34m┃\033[1;37mENCONTRADA. DESEJA MANTÊ-LA? OU CRIAR UMA NOVA     \033[0;34m┃"
    echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
    echo -e "\033[0;34m┃\033[1;37m[1] - MANTER BASE DE DADOS                        \033[0;34m┃"
    echo -e "\033[0;34m┃\033[1;37m[2] - CRIAR NOVA BASE DE DADOS                    \033[0;34m┃"
    echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
    echo ""
    while [[ ${opx} != @(1|2) ]]; do
        echo -ne "\033[1;37mQUAL OPÇÃO DESEJA? \033[1;33m"
        read opx
        tput cuu1 && tput dl1
    done
    [[ "$opx" = "2" ]] && rm $HOME/usuarios.db
    echo " " 
}

echo -e "\033[1;36mATUALIZANDO PACOTES... \033[0m"
fun_bar 'apt-get update -y' 'apt-get upgrade -y'

# Instala pacotes necessários
echo -e "\033[1;36mINSTALANDO PACOTES ESSENCIAIS \033[0m"
fun_bar 'apt-get install bc screen nano unzip dos2unix -y' 'apt-get install nmap net-tools ipcalc -y'

# Instala e configura o Python
echo -e "\033[1;36mINSTALANDO PYTHON \033[0m"
fun_bar 'apt-get install python -y' 'apt-get install python3 -y'
apt-get install python3-pip -y >/dev/null 2>&1

update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1 >/dev/null 2>&1
update-alternatives --install /usr/bin/python python /usr/bin/python3.5 2 >/dev/null 2>&1

# Instala ferramentas de rede
echo -e "\033[1;36mINSTALANDO PACOTES DE REDE \033[0m"
fun_bar 'apt-get install lsof -y' 'apt-get install fail2ban -y'
fun_bar 'apt-get install htop -y' 'apt-get install nload -y'
fun_bar 'apt-get install apache2 -y' 'apt-get install zip -y'

# Instala e configura firewalls
apt-get install ufw -y >/dev/null 2>&1
apt-get install firewalld -y >/dev/null 2>&1

echo -e "\033[1;36mINSTALANDO OUTROS PACOTES \033[0m"
fun_bar 'apt-get install figlet -y' 'apt-get install lolcat -y'
apt-get install cowsay -y >/dev/null 2>&1
apt-get install toilet -y >/dev/null 2>&1

# Baixar e configurar scripts personalizados
cd $HOME
rm -rf Plus > /dev/null 2>&1
mkdir Plus > /dev/null 2>&1
cd Plus
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Plus.zip > /dev/null 2>&1
unzip Plus.zip > /dev/null 2>&1
rm Plus.zip
cd /bin
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/MEUIPv9 >/dev/null 2>&1
chmod +x MEUIPv9 >/dev/null 2>&1
cd $HOME
cd /bin
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/c.sh >/dev/null 2>&1
chmod +x c.sh >/dev/null 2>&1
cd $HOME

cd /bin
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/menu > /dev/null 2>&1
chmod +x /bin/menu
cd $HOME

cd /root
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/BOT.sh > /dev/null 2>&1
chmod 777 BOT.sh > /dev/null 2>&1
cd $HOME

# Finaliza a configuração
touch /bin/h
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/fix >/dev/null 2>&1
chmod +x fix >/dev/null 2>&1
./fix
rm fix >/dev/null 2>&1
touch /root/.bash_history
touch /root/.bashrc

echo 'clear' >> .bashrc
echo 'echo ""' >> .bashrc
echo 'echo ""' >> .bashrc
echo 'echo ""' >> .bashrc
echo 'echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m" | lolcat' >> .bashrc
echo 'echo -e "\033[0;34m┃\E[41;1;37m             ⇱ SCRIPT SSHPLUS PRO ⇲              \E[0m\033[0;34m┃" | lolcat' >> .bashrc
echo 'echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m" | lolcat' >> .bashrc
echo 'echo ""' >> .bashrc
echo 'echo -e "\033[1;31m• \033[1;37mPARA MOSTRAR O MENU DIGITE: \033[1;32mmenu\033[0m"' >> .bashrc
echo 'echo ""' >> .bashrc
echo 'echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m" | lolcat' >> .bashrc
echo 'echo -e "\033[0;34m┃\033[1;37m               by:@TURBONET2023                  \E[0m\033[0;34m┃" | lolcat' >> .bashrc
echo 'echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m" | lolcat' >> .bashrc
echo 'echo ""' >> .bashrc

tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[41;1;37m             ⇱ SCRIPT SSHPLUS PRO ⇲              \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""
echo -e "\033[1;32m• \033[1;31mATENÇÃO \033[1;37m- SCRIPT DESENVOLVIDO PARA VPS E DEDICADOS"
echo ""
echo -e "\033[1;32m• \033[1;32mUTILIZE \033[1;37mO COMANDO \033[1;31mmenu \033[1;37mPARA MOSTRAR O PAINEL \033[0m"
echo ""
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\033[1;37m               by:@TURBONET2023                  \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""
echo -ne "\033[1;31m• \033[1;36mENTER \033[1;37mPARA FINALIZAR \033[0m"
read
sleep 1
clear
menu
