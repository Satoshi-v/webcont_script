#!/bin/bash

clear
apt-get install lolcat -y &>/dev/null
apt-get install figlet -y &>/dev/null
apt-get install curl -y &>/dev/null
apt install git -y &>/dev/null 
apt install figlet boxes -y &>/dev/null
cd $HOME
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 0
}

# Function to display a progress bar with percentage
progress_bar() {
    local progress=$1
    local total=$2
    local percent=$(( progress * 100 / total ))
    local bar_width=50
    local completed=$(( bar_width * percent / 100 ))
    local remaining=$(( bar_width - completed ))

    printf "\r  \033[1;37m[\033[1;32m"
    printf "%0.s#" $(seq 1 $completed)
    printf "%0.s-" $(seq 1 $remaining)
    printf "\033[1;37m] %d%%" "$percent"
}

# Total steps in the installation process
total_steps=6
current_step=0

# Install function
install() {
    local description=$1
    local command=$2

    ((current_step++))
    echo -ne "\n\033[1;37mInstalando: \033[1;33m$description...\033[0m"
    eval "$command"
    progress_bar $current_step $total_steps
    echo -ne "\n"
}

_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')
cd $HOME

# Step 1: Verify key
install "Verificação da Key" "wget -P $_Ink https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/list >/dev/null 2>&1 && chmod +x $_Ink/list >/dev/null 2>&1 && verif_key"

# Step 2: Update system
install "Atualização do sistema" "apt-get update -y"

# Step 3: Install Python versions
install_python_version() {
    VERSION=$1
    sudo apt update
    sudo apt install -y software-properties-common
    sudo add-apt-repository ppa:deadsnakes/ppa
    sudo apt update
    sudo apt install -y python$VERSION
    sudo update-alternatives --install /usr/bin/python$VERSION python$VERSION /usr/bin/python$VERSION 1
}

install "Instalação do Python 3.9" "install_python_version 3.9"
install "Instalação do Python 3.10" "install_python_version 3.10"
install "Instalação do Python 3.11" "install_python_version 3.11"

configure_python_alternatives() {
    sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
    sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 2
    sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 3
}
install "Configuração de alternativas do Python" "configure_python_alternatives"

optimize_python() {
    python3 -m pip install --upgrade pip
    python3 -m pip list --outdated | grep -oP '^\S+' | xargs -n1 python3 -m pip install --upgrade
    python3 -m pip cache purge
}
install "Otimização do Python" "optimize_python"

# Step 4: Install essential packages
install "Instalação de pacotes essenciais" "
pacotes=(\"bc\" \"screen\" \"nano\" \"unzip\" \"lsof\" \"netstat\" \"net-tools\" \"dos2unix\" \"nload\" \"jq\" \"curl\" \"figlet\" \"python3\" \"python-pip\" \"firewalld\")
for prog in \${pacotes[@]}; do
    apt install \$prog -y
done
pip install speedtest-cli
sudo firewall-cmd --zone=public --permanent --add-port=80/tcp
sudo firewall-cmd --zone=public --permanent --add-port=8989/tcp
sudo firewall-cmd --zone=public --permanent --add-port=5454/tcp
sudo firewall-cmd --zone=public --permanent --add-port=8888/tcp
sudo firewall-cmd --zone=public --permanent --add-port=8080/tcp
sudo firewall-cmd --zone=public --permanent --add-port=7300/udp
sudo firewall-cmd --zone=public --permanent --add-port=443/tcp
sudo firewall-cmd --zone=public --permanent --add-port=8080/tcp
sudo firewall-cmd --reload
"

# Step 5: Final steps and cleanup
install "Configuração final e limpeza" "
cd $HOME
echo \"clear\" >>/root/.bashrc
echo 'DATE=\$(date +\"%d-%m-%y\")' >>/root/.bashrc
echo 'TIME=\$(date +\"%T\")' >>/root/.bashrc
echo 'figlet -k SSH-PLUS | lolcat' >>/root/.bashrc
echo 'echo -e \" NOME DO SERVIDOR : \$HOSTNAME\"' >>/root/.bashrc
echo 'echo -e \" SERVIDOR LIGADO À : \$(uptime -p)\"' >>/root/.bashrc
echo 'echo -e \" DATA : \$DATE\"' >>/root/.bashrc
echo 'echo -e \" HORA : \$TIME\"' >>/root/.bashrc
echo 'echo -e \" (TELEGRAM)--@TURBONET2023\"' >>.bashrc
echo 'echo -e \"\033[1;31m DIGITE ( menu ) PARA ENTRAR\033[0m.\"' >>/root/.bashrc
date=\$(date '+%Y-%m-%d <> %H:%M:%S')
echo -e \"\033[1;37m \$system         \$date\"
figlet \"SSH-PLUS\" | lolcat
echo -e \"\033[01;31m\033[1;31m\033[5;34;47m                INSTALACAO CONCLUIDA               \033[1;33m \033[0m\033[01;31m\"
echo -e \"\033[01;31m\033[1;33mPARA INICIAR DIGITE: \033[1;32mmenu\033[0m\"
echo -e \"\033[01;31m\033[1;33mMAIS INFORMACOES: \033[1;31m(\033[1;36mTELEGRAM\033[1;31m)--> \033[1;37m@TURBONE2023\033[0m\"
rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
"

echo -e "\n\033[1;33m• \033[1;32mINSTALACAO COMPLETA\033[1;33m • \033[0m"
