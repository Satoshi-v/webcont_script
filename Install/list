#!/bin/bash

# Obter informações da versão
_lvk=$(wget -qO- https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/versao)

# Obter endereço IP
IP=$(wget -qO- ipv4.icanhazip.com)
IP2=$(wget -qO- http://whatismyip.akamai.com/)
[[ "$IP" != "$IP2" ]] && ipdovps="$IP2" || ipdovps="$IP"
echo -e "$ipdovps" >/etc/IP

# Configurar o fuso horário para America/Sao_Paulo
echo -e "America/Sao_Paulo" >/etc/timezone
ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime >/dev/null 2>&1
dpkg-reconfigure --frontend noninteractive tzdata >/dev/null 2>&1

# Variáveis a partir dos argumentos de entrada
lst=$1 && lst1=$2 && lst2=$3 && key1=$4 && key2=crz

# Limpeza se lst1 estiver vazio
[[ -z $lst1 ]] && {
    rm -rf $_Ink/list >/dev/null 2>&1
    cat /dev/null >~/.bash_history && history -c && exit 0
}

# Criar diretórios necessários
dirs=(
    /etc/SSHPlus /etc/SSHPlus/v2ray /etc/SSHPlus/senha /etc/SSHPlus/userteste
    /etc/SSHPlus/.tmp /etc/bot /etc/bot/info-users /etc/bot/arquivos /etc/bot/revenda
    /etc/bot/suspensos /etc/rec
)
for dir in "${dirs[@]}"; do
    [[ ! -d $dir ]] && mkdir -p $dir
done

# Criar arquivos necessários
files=(/etc/SSHPlus/Exp /etc/bot/lista_ativos /etc/bot/lista_suspensos)
for file in "${files[@]}"; do
    [[ ! -e $file ]] && touch $file
done

# Criar arquivo de licença SSHPlus
echo -e 'by: @KIRITO_SSH' >/usr/lib/sshplus
cat /usr/lib/sshplus >$lst2/licence
cat /usr/lib/sshplus > /etc/SSHPlus/.tmp/crazy

# Configurar Apache e SSH
netstat -nplt | grep -w 'apache2' | grep -w '80' && sed -i "s/Listen 80/Listen 81/g" /etc/apache2/ports.conf && service apache2 restart
[[ "$(grep -o '#Port 22' /etc/ssh/sshd_config)" == "#Port 22" ]] && sed -i "s;#Port 22;Port 22;" /etc/ssh/sshd_config && service ssh restart
grep -v "^PasswordAuthentication" /etc/ssh/sshd_config >/tmp/passlogin && mv /tmp/passlogin /etc/ssh/sshd_config
echo "PasswordAuthentication yes" >>/etc/ssh/sshd_config

# Remover scripts antigos e baixar novos
_dir1='/bin'
_dir2='/etc/SSHPlus'
rm $_dir2/ShellBot.sh $_dir2/cabecalho $_dir2/open.py $_dir2/proxy.py $_dir2/wsproxy.py >/dev/null 2>&1
_mdls=("addhost" "ajuda" "alterarlimite" "alterarsenha" "apache2menu" "auto-reboot.sh" "tcptweaker.sh" "checkers" "utili" "multi" "check" "chuser" "limit" "rps_cpu" "attscript" "Autobackup" "backup_mail.sh" "badvpn" "badpro" "badpro1" "badvpn2" "badvpn3" "banner" "bashtop" "ddos" "blocksite" "blockt" "blockuser" "bot" "botssh" "cabecalho" "conexao" "criarteste" "criarusuario" "delhost" "delscript" "detalhes" "dns-netflix.sh" "droplimiter" "expcleaner" "ban.sh" "fr" "GoLang.sh" "infousers" "inst-botteste" "initcheck" "instsqd" "limiter" "menu" "menub" "menub2" "menuudp" "mudardata" "mtuning" "multi" "onlineapp" "open.py" "otimizar" "painelv2ray" "prissh" "prnet.sh" "proxydt" "proxy.py" "psiphon.sh" "reiniciarservicos" "reiniciarsistema" "remover" "senharoot" "ShellBot.sh" "slowdns" "speedtest" "sshmonitor" "swapmemory" "trafegototal" "trojan-go" "uexpired" "userbackup" "velocity" "verifatt" "verifbot" "v2ray" "v2raymanager" "webmin.sh" "websocket.sh" "wireguard.sh" "wsproxy.py" "pkill.sh")
for _arq in ${_mdls[@]}; do
    [[ -e $_dir1/$_arq ]] && rm $_dir1/$_arq >/dev/null 2>&1
    wget -c -P $_dir1 https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/$_arq
    chmod +x $_dir1/$_arq
done
mv $_dir1/cabecalho $_dir1/bot $_dir1/open.py $_dir1/proxy.py $_dir1/wsproxy.py $_dir2

# Atualizar o arquivo hosts
_arq_host="/etc/hosts"
_host=("d1n212ccp6ldpw.cloudfront.net" "dns.whatsapp.net" "portalrecarga.vivo.com.br/recarga" "navegue.vivo.com.br/controle/" "navegue.vivo.com.br/pre/" "www.whatsapp.net" "/SSHPLUS?")
for host in ${_host[@]}; do
    if [[ "$(grep -w "$host" $_arq_host | wc -l)" = "0" ]]; então
        sed -i "3i\127.0.0.1 $host" $_arq_host
    fi
done

# Configuração do script de inicialização automática
[[ ! -e /etc/autostart ]] && {
    echo '#!/bin/bash
clear
#INICIO AUTOMATICO' >/etc/autostart
    chmod +x /etc/autostart
} || {
    [[ $(ps x | grep "bot_plus" | grep -v grep | wc -l) != '0' ]] && wget -qO- https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/ShellBot.sh
    for proc in $(ps x | grep 'dmS' | grep -v 'grep' | awk {'print $1'}); do
        screen -r -S "$proc" -X quit    
    done
    screen -wipe >/dev/null
    echo '#!/bin/bash
clear
#INICIO AUTOMATICO' >/etc/autostart
    chmod +x /etc/autostart
}

# Configuração do Crontab
crontab -r >/dev/null 2>&1
(
    crontab -l 2>/dev/null
    echo "@daily /bin/verifatt"
    echo "@reboot /etc/autostart"
    echo "* * * * * /etc/autostart"
    echo "0 */6 * * * /bin/uexpired"
) | crontab -

# Salvar versão e baixar ferramentas adicionais
echo "$_lvk" | sed -n '1 p' | cut -d' ' -f2 >/bin/versao
cat /bin/versao >/home/sshplus
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/jq-linux64 >/dev/null 2>&1
chmod +x jq-linux64 && mv jq-linux64 $(which jq)
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/jq-linux-amd64 >/dev/null 2>&1
chmod +x jq-linux-amd64 && mv jq-linux-amd64 $(which jq)

# Reiniciar serviços e limpar
service cron restart >/dev/null 2>&1
service ssh restart >/dev/null 2>&1
[[ -d /var/www/html/openvpn ]] && service apache2 restart >/dev/null 2>&1

# Configuração final e limpeza
rm -rf $lst1/list >/dev/null 2>&1
mkdir /opt/sshplus
echo > /opt/sshplus/sshplus

# Baixar WebSocket e chaves
cd /etc/SSHPlus/
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/WebSocket
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/pub.key
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/priv.pem
chmod 777 WebSocket

# Baixar proxydt
cd /etc/SSHPlus/
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/proxydt
chmod 777 proxydt

cd $HOME
