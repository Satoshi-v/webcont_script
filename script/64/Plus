#!/bin/bash

clear

# Instalação silenciosa de pacotes
apt-get install -y lolcat figlet curl git boxes &>/dev/null

# Verificação de root
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
    exit 1
fi

# Decodificação de URLs
lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')
link_list=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')

# Função de barra de progresso
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        ${comando[0]} -y > /dev/null 2>&1
        ${comando[1]} -y > /dev/null 2>&1
        touch $HOME/fim
    ) > /dev/null 2>&1 &
    
    tput civis
    echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;37m]"
        tput cuu1
        tput dl1
        echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
    done
    echo -e "\033[1;37m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

# Função para verificar a chave
function verif_key() {
    chmod +x $ink/list > /dev/null 2>&1
    if [[ ! -e "$ink/list" ]]; then
        echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
        exit 1
    fi
}

# Exibição de informações iniciais
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[41;1;37m             ⇱ SCRIPT SSHPLUS PRO ⇲              \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""          
echo -e "             \033[1;31mATENÇÃO! \033[1;37mESSE SCRIPT IRÁ! \033[0m"
echo ""
echo -e "\033[1;31m• \033[1;37mINSTALAR UM CONJUNTO DE SCRIPTS COMO FERRAMENTAS\033[0m"
echo -e "\033[1;37m  PARA O GERENCIAMENTO DE REDE, SISTEMA E USUÁRIOS\033[0m"
echo ""
echo -e "\033[1;32m• \033[1;32mDICA! \033[1;37mUTILIZE O TEMA DARK EM SEU TERMINAL PARA\033[0m"
echo -e "\033[1;37m  UMA MELHOR EXPERIÊNCIA E VISUALIZAÇÃO DO MESMO!\033[0m"
echo ""   
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\033[1;37m               by:@TURBONET2023                  \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"           
echo ""

# Verificação de link
echo -e "\n\033[1;36mVERIFICANDO LINK... \033[0m" 
rm $ink/list > /dev/null 2>&1
wget -P $ink https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/list >/dev/null 2>&1
verif_key
sleep 3s
echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
rm versao* >/dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/versao >/dev/null 2>&1
rm v2raymanager >/dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/v2raymanager >/dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/botteste.sh >/dev/null 2>&1
chmod 777 v2raymanager >/dev/null 2>&1
chmod 777 botteste.sh >/dev/null 2>&1
mkdir $HOME/BOT >/dev/null 2>&1
cd $HOME/BOT
wget https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Modulos/ShellBot.sh >/dev/null 2>&1
chmod 777 ShellBot.sh >/dev/null 2>&1
cd >/dev/null 2>&1

# Verificação de base de dados de usuários
if [[ -f "$HOME/usuarios.db" ]]; then
    tput reset
    echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
    echo -e "\033[0;34m┃                   \033[1;37m• \033[1;31mATENÇÃO \033[1;37m•                   \033[0;34m┃"
    echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
    echo -e "\033[0;34m┃\033[1;37mUMA BASE DE DADOS DE USUÁRIOS \033[1;32m(usuarios.db) \033[1;37mfoi encontrada!\033[0m" 
    echo -e "\033[0;34m┃\033[1;37mDESEJA MANTÊ-LA PRESERVANDO O LIMITE DE CONEXÕES SIMULTÂNEAS\033[0m"
    echo -e "\033[0;34m┃\033[1;37mDE USUÁRIOS? OU DESEJA CRIAR UMA NOVA BASE?\033[0m"
    echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
    echo -e "\033[0;34m┃\033[1;37m[\033[1;31m1\033[1;37m] MANTER BASE DE DADOS ATUAIS                  \033[0;34m┃"
    echo -e "\033[0;34m┃\033[1;37m[\033[1;31m2\033[1;37m] CRIAR UMA NOVA BASE DE DADOS                 \033[0;34m┃"
    echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
    echo ""
    read -p "Digite apenas o número [1 ou 2]: " -e -i 1 resposta
    if [[ "$resposta" = '2' ]]; then
        rm $HOME/usuarios.db > /dev/null 2>&1
        touch $HOME/usuarios.db > /dev/null 2>&1
    fi
else
    touch $HOME/usuarios.db > /dev/null 2>&1
fi

# Otimização de Python
otimize_python() {
    apt-get install -y python python2 python3.6 python3.7 python3.8 python3.9 python3.10 python3.11
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 5
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 6
    apt install -y pip python3-pip socat
    update-alternatives --set python3 /usr/bin/python3.6
}
fun_bar 'otimize_python'

# Instalação de pacotes adicionais
inst_pct() {
    _pacotes=("bc" "screen" "nano" "unzip" "lsof" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip" "firewalld")
    for _prog in ${_pacotes[@]}; do
        apt-get install -y "$_prog" &>/dev/null
    done
    pip install speedtest-cli
    firewall-cmd --zone=public --permanent --add-port={80,8989,5454,8888,8080,7300,443}/tcp
    firewall-cmd --reload
}
fun_bar 'inst_pct'

# Configuração do UFW
if [[ -f "/usr/sbin/ufw" ]]; then
    ufw allow 443/tcp
    ufw allow 80/tcp
    ufw allow 3128/tcp
    ufw allow 8799/tcp
    ufw allow 8080/tcp
fi

# Finalização da instalação
fun_bar "$ink/list $lnk $ink $lnk $key"

# Configurações finais no .bashrc
echo "clear" >> /root/.bashrc
echo 'DATE=$(date +"%d-%m-%y")' >> /root/.bashrc
echo 'TIME=$(date +"%T")' >> /root/.bashrc
echo 'figlet -k SSH-PLUS | lolcat' >> /root/.bashrc
echo 'echo -e " NOME DO SERVIDOR : $HOSTNAME"' >> /root/.bashrc
echo 'echo -e " SERVIDOR LIGADO À : $(uptime -p)"' >> /root/.bashrc
echo 'echo -e " DATA : $DATE"' >> /root/.bashrc
echo 'echo -e " HORA : $TIME"' >> /root/.bashrc
echo 'echo -e " (TELEGRAM)--@TURBONET2023"' >> /root/.bashrc
echo 'echo -e "\033[1;31m DIGITE ( menu ) PARA ENTRAR\033[0m."' >> /root/.bashrc
echo 'echo -e ""' >> /root/.bashrc

# Exibição final
date=$(date '+%Y-%m-%d <> %H:%M:%S')
echo -e "\033[1;37m $system         $date"

figlet "SSH-PLUS" | lolcat
echo -e "\033[01;31m\033[1;31m\033[5;34;47m                INSTALACAO CONCLUIDA               \033[1;33m \033[0m\033[01;31m"
echo -e "\033[01;31m\033[1;33mPARA INICIAR DIGITE: \033[1;32mmenu\033[0m"
echo -e "\033[01;31m\033[1;33mMAIS INFORMACOES: \033[1;31m(\033[1;36mTELEGRAM\033[1;31m)--> \033[1;37m@TURBONE2023\033[0m"
rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
