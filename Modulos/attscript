#!/bin/bash

# Limpa a tela
clear

# Função para verificar se um comando está instalado
check_command() {
  command -v "$1" >/dev/null 2>&1 || { echo "O comando '$1' não está instalado. Por favor, instale-o para continuar."; exit 1; }
}

# Verifica se as dependências necessárias estão instaladas
check_command wget
check_command figlet
check_command sed
check_command tput
check_command chmod

# Função para exibir uma barra de progresso enquanto comandos são executados
fun_bar() {
  comando[0]="$1"
  comando[1]="$2"

  (
    [[ -e $HOME/fim ]] && rm $HOME/fim
    ${comando[0]} > /dev/null 2>&1
    ${comando[1]} > /dev/null 2>&1
    touch $HOME/fim
  ) > /dev/null 2>&1 &

  tput civis
  echo -ne "   \033[1;33mAGUARDE \033[1;37m- \033[1;33m["

  while true; do
    for ((i=0; i<18; i++)); do
      echo -ne "\033[1;31m#"
      sleep 0.1s
    done
    [[ -e $HOME/fim ]] && rm $HOME/fim && break
    echo -e "\033[1;33m]"
    sleep 1s
    tput cuu1
    tput dl1
    echo -ne "   \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
  done

  echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
  tput cnorm
}

# Função para verificar e baixar atualizações
fun_atts() {
  [[ -e /home/versao ]] && rm /home/versao
  [[ -e /tmp/att ]] && rm /tmp/att

  wget -c -P /home -q -O- raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/versao | bash || { echo "Erro ao baixar o arquivo de versão."; exit 1; }
  [[ -f "/home/versao" ]] && mv /home/versao /tmp/att
  [[ ! -e /bin/versao ]] && rm -rf /bin/menu
} > /dev/null 2>&1

echo " "

echo -e "                              \033[1;31mBy SSH-PLUS\033[1;36m"
echo -e "   SSH-PLUS" | figlet
echo " "
echo -e "   \033[1;32mVERIFICANDO ATUALIZACOES DISPONIVEIS\033[0m\n"

fun_bar 'fun_atts'

# Verifica se a atualização foi bem-sucedida
[[ ! -f "/tmp/att" ]] && {
  echo -e "\n\033[1;31m ERRO AO CONECTAR AO SERVIDOR\n"
  echo -ne "\033[1;31m ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
  menu
}

echo " "

# Lê as versões do script atual e da atualização
vrs1=$(sed -n '1p' /bin/versao | sed -e 's/[^0-9]//g')
vrs2=$(sed -n '1p' /tmp/att | sed -e 's/[^0-9]//g')

if [[ "$vrs1" == "$vrs2" ]]; then
  echo -e " \033[1;36m     O SCRIPT JA ESTA ATUALIZADO!\033[1;32m\n"
  rm /tmp/att > /dev/null 2>&1
  echo -e " \033[1;33m MAIS INFORMACOES \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37mEDIT: SSH-PLUS\n"
  echo -ne " \033[1;31m ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
  menu
else
  echo -e "  \033[1;36mEXISTE UMA NOVA ATUALIZACAO DISPONIVEL!\033[1;33m\n"
  echo -e "  \033[1;33mMAIS INFORMACOES \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37mEDIT: SSH-PLUS\n"
  echo -e "  \033[1;32mDETALHES DA ATUALIZACAO:\033[0m\n"
  while read -r linha; do
    echo -e "  \033[1;37m- \033[1;33m$linha"
  done < "/tmp/att"
  echo " "
  echo -ne "  \033[1;32mDESEJA ATUALIZAR \033[1;31m? \033[1;33m[s/n]:\033[1;37m "; read -r res
  if [[ "$res" = s || "$res" = S ]]; then
    echo -e "\n\033[1;32m  INICIANDO ATUALIZACAO..."
    sleep 3
    wget -q -O- raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/ssh-plus > Plus || { echo "Erro ao baixar o novo script."; exit 1; }
    chmod +x Plus
    ./Plus
    clear
    echo -e "\033[1;32mSCRIPT ATUALIZADO COM SUCESSO\033[0m\n"
    rm /tmp/att > /dev/null 2>&1
    echo -ne "\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
    menu
  else
    menu
  fi
fi
