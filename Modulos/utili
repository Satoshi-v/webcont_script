#!/bin/bash
IP=$(cat /etc/IP)
x="ok"

fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}

fun_gestorcodes ()
{

inst_components () {
# 
# echo -ne " \033[1;31m[!] apt-get grep"
# apt-get install grep -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
# echo -ne " \033[1;31m[ ! ] apt-get at"
# apt-get install at -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
# echo -ne " \033[1;31m[ ! ] apt-get netcat-openbsd"
# apt-get install netcat-openbsd -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
# 
echo -ne " \033[1;31m[ ! ] apt-get gawk"
apt-get install gawk -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get mlocate"
apt-get install mlocate -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get bc"
apt-get install bc -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get screen"
apt-get install screen -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get nano"
apt-get install nano -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get zip"
apt-get install zip -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get unzip"
apt-get install unzip -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get lsof"
apt-get install lsof -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get netstat"
apt-get install netstat -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get net-tools"
apt-get install net-tools -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get dos2unix"
apt-get install dos2unix -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get nload"
apt-get install nload -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get htop"
apt-get install htop -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get jq"
apt-get install jq -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get curl"
apt-get install curl -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get figlet"
apt-get install figlet -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get ufw"
apt-get install ufw -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get apache2"
apt-get install apache2 -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
sed -i "s;Listen 80;Listen 81;g" /etc/apache2/ports.conf
service apache2 restart > /dev/null 2>&1 &
echo -ne " \033[1;31m[ ! ] apt-get python"
apt-get install python -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get python3"
apt-get install python3 -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
echo -ne " \033[1;31m[ ! ] apt-get python-pip"
apt-get install python-pip -y > /dev/null 2>&1 && echo -e "\033[1;32m [OK]" || echo -e "\033[1;31m [FAIL]"
pip install speedtest-cli &>/dev/null
return
}

namesistema () {
   clear
   echo -e "\033[1;33mTHE NAME WILL BE CHANGED INTERNALLY IN THE SYSTEM \033[0m"
   unset name
   while [[ ${name} = "" ]]; do
   echo -ne "\n\033[1;32mENTER NEW NAME\033[1;37m: "; read name
   [[ -z "$name" ]] && {
   echo -e "\n\033[1;31mINVALID NAME !\033[0m"
   return
   }
   done
   hostnamectl set-hostname $name 
   if [ $(hostnamectl status | head -1  | awk '{print $3}') = "${name}" ]; then 
   service ssh restart > /dev/null 2>&1
   service sshd restart > /dev/null 2>&1
   echo -e "\n\033[1;32mNAME CHANGED SUCCESSFULLY!!\033[0m"
   else
   echo -e "\n\033[1;31mINVALID NAME !\033[0m"
   fi
}

# Función para reiniciar las reglas de iptables
reset_iptables() {
    echo -e "\e[1;32mREINICIANDO IPTABLES...\n\e[0m"
    iptables -F
    iptables -X
    iptables -t nat -F
    iptables -t nat -X
    iptables -t mangle -F
    iptables -t mangle -X
    iptables -t raw -F
    iptables -t raw -X
    iptables -t security -F
    iptables -t security -X
    iptables -P INPUT ACCEPT
    iptables -P FORWARD ACCEPT
    iptables -P OUTPUT ACCEPT
    service ssh restart
    service sshd restart
    echo -e "\n\e[1;32mRESET IPTABLES COMPLETADO!\e[0m"
}

# Función para limpiar paquetes obsoletos
clean_obsolete_packages() {
    echo -e "\e[1;32mBUSCANDO PAQUETES OBSOLETOS...\n\e[0m"
    obsolete_packages=$(dpkg -l | grep -i ^rc | awk '{print $2}')
    if [ -n "$obsolete_packages" ]; then
        echo -e "Paquetes obsoletos encontrados:\n$obsolete_packages"
        echo -e "\nEliminando paquetes obsoletos..."
        sudo apt-get purge $obsolete_packages
        echo -e "\nPaquetes obsoletos eliminados."
        service ssh restart > /dev/null 2>&1
        service sshd restart > /dev/null 2>&1
        echo -e "\n\e[1;32mRESET IPTABLES COMPLETADO!\e[0m"
    else
        echo -e "\n\e[1;32mNo se encontraron paquetes obsoletos.\e[0m"
    fi
}

verconexionsshentiemporeal () { 
clear
echo -e "\E[44;1;37m          Conexiones SSH en tiempo real      \E[0m"
echo ""
echo -e "\033[1;32m" && journalctl -fu ssh
echo ""
}

verlogconexionsshentiemporeal () {
clear
echo -e "\E[44;1;37m         Log de conexiones SSH recientes      \E[0m"
echo ""
echo -e "\033[1;32m" && tail -100 /var/log/auth.log | grep 'sshd'
echo ""
}

verdelogconexionssh () {
clear
echo -e "\E[44;1;37m     Log de conexiones SSH usuarios exitosas  \E[0m"
echo ""
echo -e "\033[1;32m" && cat /var/log/auth* | grep Accepted | awk '{print $1 " " $2 "\t" $3 "\t" $11 "\t" $9 }'
echo ""
}

while true $x != "ok"
do

if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi

on="\033[1;32mâ—‰ " && off="\033[1;31mâ—‹ "
[[ `grep -c "^#ADM" /etc/sysctl.conf` -eq 0 ]] && tcp=$off || tcp=$on
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32mâ—‰ ") || stsf=$(echo -e "\033[1;31mâ—‹ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32mâ—‰ " || echo -e "\033[1;31mâ—‹ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32mâ—‰ " || echo -e "\033[1;31mâ—‹ ")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;32mâ—‰ " || echo -e "\033[1;31mâ—‹ ")
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32mâ—‰ " || echo -e "\033[1;31mâ—‹ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32mâ—‰ " || echo -e "\033[1;31mâ—‹ ")
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf '%-9s' "$(free -h | grep -i mem | awk '{print $2}')")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1"%"}')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-10s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(printf '%-5s' "$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)")
swap1=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $2'})")
swap2=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $4'})")
swap3=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $3'})")

clear
echo -e "\033[01;31m\033[1;31m\033[5;34;47m            FERRAMENTAS PRO                     \033[1;33m \033[0m\033[01;31m║"
echo -e "\033[01;31m\033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 01 •\033[1;34m]\033[1;37m ➩  \033[1;33mATUALIZAR SISTEMA \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 02 •\033[1;34m]\033[1;37m ➩  \033[1;33mREINICIAR SERVICOS \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 03 •\033[1;34m]\033[1;37m ➩  \033[1;33mREINSTALAR PACOTES \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 04 •\033[1;34m]\033[1;37m ➩  \033[1;33mREINICIAR SISTEMA \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 05 •\033[1;34m]\033[1;37m ➩  \033[1;33mMEMÓRIA SWAP \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 06 •\033[1;34m]\033[1;37m ➩  \033[1;33mALTERAR SENHA ROOT \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 07 •\033[1;34m]\033[1;37m ➩  \033[1;33mTRAFÉGO DE REDE \033[1;31m(nlod)" 
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 08 •\033[1;34m]\033[1;37m ➩  \033[1;33mPROCESSOS DE SISTEMA \033[1;31m(htop)" 
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 09 •\033[1;34m]\033[1;37m ➩  \033[1;33mMONITOR DO SISTEMA \033[1;31m(glances)"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 10 •\033[1;34m]\033[1;37m ➩  \033[1;33mREINICIAR IPTABLES \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 11 •\033[1;34m]\033[1;37m ➩  \033[1;33mFAIL2BAN PROTECAO \033[1;31m[Inestable]"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 12 •\033[1;34m]\033[1;37m ➩  \033[1;33mBLOQUEADOR DE SITE \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 13 •\033[1;34m]\033[1;37m ➩  \033[1;33mBLOQUEIO TORRENT \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 14 •\033[1;34m]\033[1;37m ➩  \033[1;33mATIVAR TCP-BRUTAL \033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 15 •\033[1;34m]\033[1;37m ➩  \033[1;33mANTI ATAQUE DDOS \033[01;31m $sts2\033[0m"
echo -e "\033[01;31m\033[1;31m\033[1;34m[\033[1;37m 00 •\033[1;34m]\033[1;37m ➩  \033[1;33mRETORNAR AO MENU \033[1;32m<\033[1;33m<\033[1;31m< "
echo -e ""
echo -ne "\033[1;32mESCOLHA OPÇÃO DESEJADA \033[1;33m?\033[1;31m?\033[1;37m : "; read x

case "$x" in 
   1 | 01)
   clear
   atualizarsistema
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   reiniciarservicos
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   3 | 03)
   clear
   atualizarsistema #reinstallpacotes
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   4 | 04)
   clear
   reiniciarsistema
   ;;
   5 | 05)
   clear
   swapmemory
   ;;
   6 | 06)
   clear
   senharoot
   ;;
   7 | 07)
   clear
   echo -e "\033[1;32mPARA SAIR CLIQUE EM CTRL + C\033[1;36m"
   # echo -e "\033[1;32mPARA SAIR CLIQUE NA LETRA \033[1;36mq\033[1;36m"
   sleep 3
   [[ $(dpkg --get-selections|grep -w "nload"|head -1) ]] || apt-get install nload -y &>/dev/null
   nload
   ;;
   8 | 08)
   clear
   echo -e "\033[1;32mPARA SAIR CLIQUE EM CTRL + C\033[1;36m"
   # echo -e "\033[1;32mPARA SAIR CLIQUE NA LETRA \033[1;36mq\033[1;36m"
   sleep 3
   [[ $(dpkg --get-selections|grep -w "htop"|head -1) ]] || apt-get install htop -y &>/dev/null
   htop
   ;;
   9 | 09)
   clear
   echo -e "\033[1;32mPARA SAIR CLIQUE EM CTRL + C\033[1;36m"
   # echo -e "\033[1;32mPARA SAIR CLIQUE NA LETRA \033[1;36mq\033[1;36m"
   sleep 3
   [[ $(dpkg --get-selections|grep -w "glances"|head -1) ]] || apt-get install glances -y &>/dev/null
   #apt-get install python-pip build-essential python-dev glances -y
   #pip install Glances PySensors -y
   glances
   ;;
   10)
   clear
   reset_iptables
   echo -ne "\n\033[1;31mENTER \033[1;33mpara volver al \033[1;32mMENU!\033[0m"; read
   ;;
   11)
   clear
   fail2ban
   exit;
   ;;
   12)
   blocksite
   ;;
   13)
   blockt
   ;;
   14)
   clear
   bash <(curl -s https://raw.githubusercontent.com/PhoenixxZ2023/bbrv3/master/bbrv3.sh --ipv4)
   ;;
   15)
   ddos
   ;;
   0 | 00)
   menu
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcion invalida !\033[0m"
   sleep 1
esac
done
}
fun_gestorcodes
#fim
