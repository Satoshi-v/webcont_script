#!/bin/bash

#================================================================
txt[142]="foram eliminados com sucesso"
txt[143]="Por que não?"
txt[144]="Desinstalação"
txt[145]="Ver log"
txt[146]="Esta é a FAILBAN PROTECTION"
txt[147]="Feito unicamente para proteger a segurança do"
txt[148]="Sistema, seu objetivo é analisar"
txt[149]="LOGS DE ACESSO e bloquear toda"
txt[150]="ação suspeita"
txt[151]="aumentando em 70% sua segurança."
txt[152]="Deseja instalar o Fail2Ban?"
txt[153]="Fail2Ban será instalado"
txt[154]="Seguintes Serviços"
txt[155]="Confirma a escolha?"
txt[156]="Instalação finalizada"
cor[0]="\033[0m"
cor[1]="\033[0;34m"
cor[2]="\033[1;32m"
cor[3]="\033[1;37m"
cor[4]="\033[1;36m"
cor[5]="\033[1;33m"
cor[6]="\033[1;35m"
#================================================================

# Função para verificar se um pacote está instalado
check_package() {
    dpkg -l | grep -q "^ii  $1 "
}

# Lista de serviços
services=()

# Verifica os pacotes e preenche a lista de serviços
check_package "openssh" && services+=("ssh")
check_package "squid" && services+=("squid")
check_package "dropbear" && services+=("dropbear")
check_package "apache2" && services+=("apache")

echo -e "${cor[1]} ================================================================ ${cor[0]}"

fail2ban_function () {
    if check_package "fail2ban"; then
        echo -e "${cor[4]} ${txt[143]}"
        echo -e "${cor[2]} |1|• ${cor[3]} ${txt[144]}"
        echo -e "${cor[2]} |2|• ${cor[3]} ${txt[145]}"
        echo -e "${cor[1]} ================================================================ ${cor[0]}"
        read -p " [1|2]: " lo_og
        if [ "$lo_og" = "2" ]; then
            cat /var/log/fail2ban.log
        elif [ "$lo_og" = "1" ]; then
            apt-get remove fail2ban -y
        fi
        echo -e "${cor[1]} ================================================================ ${cor[0]}"
        return
    fi

    echo -e "${cor[5]} ${txt[146]}"
    echo -e "${cor[5]} ${txt[147]}"
    echo -e "${cor[5]} ${txt[148]}"
    echo -e "${cor[5]} ${txt[149]}"
    echo -e "${cor[5]} ${txt[150]}"
    echo -e "${cor[5]} ${txt[151]}"
    echo -e "${cor[5]} ${txt[152]}"
    echo -e "${cor[1]} ================================================================ \033[1;37m"
    read -p " [S/N]: " fail2ban
    if [[ "$fail2ban" =~ ^[sS]$ ]]; then
        apt-get install fail2ban -y
        cd $HOME
        wget -O fail2ban-1.1.0.tar.gz https://raw.githubusercontent.com/PhoenixxZ2023/PLUS/main/Install/fail2ban-1.1.0.tar.gz

        if [ -f "$HOME/fail2ban-1.1.0.tar.gz" ]; then
            tar -xf $HOME/fail2ban-1.1.0.tar.gz
            cd $HOME/fail2ban-1.1.0

            if [ -f "./setup.py" ]; then
                ./setup.py install
            else
                echo "Erro: Arquivo setup.py não encontrado!"
                exit 1
            fi
        else
            echo "Erro: Arquivo fail2ban-1.1.0.tar.gz não encontrado!"
            exit 1
        fi

        # Configuração básica do fail2ban
        echo '[INCLUDES]
before = paths-debian.conf
[DEFAULT]
ignoreip = 127.0.0.1/8
bantime  = 1036800
findtime  = 3600
maxretry = 5
backend = auto
usedns = warn
logencoding = auto
enabled = false
protocol = tcp
chain = INPUT
port = 0:65535
fail2ban_agent = Fail2Ban/%(fail2ban_version)s
banaction = iptables-multiport
action_ = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
action_mw = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
            %(mta)s-whois[name=%(__name__)s, sender="%(sender)s", dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]' > /etc/fail2ban/jail.local

        echo -e "${cor[1]} ================================================================ ${cor[0]}"
        echo -e "${cor[5]} ${txt[153]}"
        echo -e "${cor[5]} ${txt[154]}"
        
        # Adiciona as configurações dos serviços ao jail.local
        for service in "${services[@]}"; do
            case "$service" in
                "ssh")
                    echo '[sshd]
enabled = true
port    = ssh
logpath = %(sshd_log)s
backend = %(sshd_backend)s' >> /etc/fail2ban/jail.local
                    ;;
                "squid")
                    echo '[squid]
enabled = true
port     = 80,443,3128,8080
logpath = /var/log/squid/access.log' >> /etc/fail2ban/jail.local
                    ;;
                "dropbear")
                    echo '[dropbear]
enabled = true
port     = ssh
logpath  = %(dropbear_log)s
backend  = %(dropbear_backend)s' >> /etc/fail2ban/jail.local
                    ;;
                "apache")
                    echo '[apache-auth]
enabled = true
port     = http,https
logpath  = %(apache_error_log)s' >> /etc/fail2ban/jail.local
                    ;;
            esac
        done

        echo -e "${cor[1]} ================================================================ ${cor[0]}"
        echo -e "${cor[5]} ${txt[155]}"
        read -p " [S/N]: " sim_nao
        if [[ "$sim_nao" =~ ^[sS]$ ]]; then
            systemctl restart fail2ban
            echo -e "${cor[1]} ================================================================ ${cor[0]}"
            echo -e "${cor[5]} ${txt[156]}"
        fi
    fi
    echo -e "${cor[1]} ================================================================ ${cor[0]}"
}

fail2ban_function
